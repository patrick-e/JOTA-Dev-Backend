name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: jota_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest pytest-django coverage

    - name: Run linting
      run: |
        flake8 JOTA --count --max-line-length=127 --statistics

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/jota_test
        DJANGO_SETTINGS_MODULE: JOTA.settings
        SECRET_KEY: test-key
      run: |
        python manage.py test
        
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v2
    
    - name: Build Docker image
      run: |
        docker build -t jota-api .
        docker tag jota-api jota-api:${{ github.sha }}

    - name: Save Docker image
      run: docker save jota-api:${{ github.sha }} > jota-api.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: docker-image
        path: jota-api.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: docker-image

    - name: Load Docker image
      run: docker load < jota-api.tar

    - name: Deploy (Simulado)
      run: |
        echo "Iniciando deploy simulado..."
        echo "Imagem: jota-api:${{ github.sha }}"
        echo "Deploy concluÃ­do com sucesso!"
