name: Django CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: admin
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U admin"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v4

      # Configuração do Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      # Instalação de dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Criar diretório estático
      - name: Set up project structure
        run: |
          mkdir -p JOTA/static

      # Verificar conexão do PostgreSQL
      - name: Check PostgreSQL connection
        run: |
          echo "Verificando conexão com o PostgreSQL..."
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U admin; then
              echo "PostgreSQL está pronto!"
              break
            fi
            echo "Aguardando PostgreSQL (tentativa $i)..."
            sleep 5
          done
          if ! pg_isready -h localhost -p 5432 -U admin; then
            echo "PostgreSQL não está acessível após várias tentativas."
            exit 1
          fi
        env:
          PGPASSWORD: 1234

      # Configuração do banco de dados
      - name: Set up database
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: admin
        run: |
          python JOTA/manage.py makemigrations
          python JOTA/manage.py migrate

      # Execução dos testes
      - name: Run tests
        env:
          DATABASE_URL: postgres://admin:1234@localhost:5432/admin
          DJANGO_SETTINGS_MODULE: JOTA.settings
          SECRET_KEY: test-key
        run: |
          python JOTA/manage.py test editor
          python JOTA/manage.py test user

      # Verificação de linting
      - name: Run linting
        run: |
          flake8 JOTA --count --max-line-length=127 --statistics